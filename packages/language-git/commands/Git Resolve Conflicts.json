{
  "beforeRunningCommand": "nop",
  "command": "#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby\n\n# Resolve conflicts command for git/FileMerge\n# By Tim Harper\n# http://code.leadmediapartners.com/\n\nrequire \"fileutils\"\nFM=\"#{`\"$TM_SUPPORT_PATH/bin/find_app\" FileMerge.app`}/Contents/MacOS/FileMerge\"\nrequire ENV['TM_BUNDLE_SUPPORT'] + '/environment.rb'\nrequire ENV['TM_SUPPORT_PATH'] + '/lib/escape.rb'\n\nstate = :both\n\ninput_file_path = ENV['TM_FILEPATH']\ninput_filename = File.basename(input_file_path)\n\ninput = $<.read\n\nleft = \"\"\nright = \"\"\n\n\ninput.each { |line|\n  if /^(<{7}|={7}|>{7})($| )/.match(line)\n    state = \n      case $1\n      when \"<<<<<<<\" then :left\n      when \"=======\" then :right\n      when \">>>>>>>\" then :both\n      end\n    next\n  end\n  left << line if state == :left || state == :both\n  right << line if state == :right || state == :both\n}\n\nif left==right\n  puts \"No conflicts to resolve in #{input_file_path}.\"\n  exit\nend\n\nfilename = \"git-conflict-resolve\"\ntmp_path = \"#{ENV['TMPDIR']}/git-conflict-resolve/\"\n\nFileUtils.rm_rf(tmp_path)\nFileUtils.mkdir_p(tmp_path)\n\nleft_file =  \"#{tmp_path}left-#{input_filename}.rb\"\nright_file = \"#{tmp_path}right-#{input_filename}.rb\"\nFile.open(left_file, \"w\") { |f| f.puts left }\nFile.open(right_file, \"w\") { |f| f.puts right }\n\n%x{#{FM} -left #{e_sh left_file} -right #{e_sh right_file} -merge #{e_sh input_file_path} &>/dev/null & }\n",
  "input": "document",
  "inputFormat": "text",
  "name": "Edit Conflicts With FileMergeâ€¦",
  "outputCaret": "afterOutput",
  "outputFormat": "text",
  "outputLocation": "toolTip",
  "requiredCommands": [
    {
      "command": "git",
      "locations": [
        "/usr/local/git/bin/git",
        "/opt/local/bin/git",
        "/usr/local/bin/git"
      ],
      "variable": "TM_GIT"
    }
  ],
  "scope": "attr.scm.git",
  "semanticClass": "action.scm.conflicts",
  "version": 2
}
