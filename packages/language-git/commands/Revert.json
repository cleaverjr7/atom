{
  "beforeRunningCommand": "nop",
  "command": "#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby\n# encoding: utf-8\nrequire ENV['TM_BUNDLE_SUPPORT'] + '/environment.rb'\nrequire ENV['TM_SUPPORT_PATH'] + '/lib/ui.rb'\nrequire ENV['TM_SUPPORT_PATH'] + '/lib/escape.rb'\n\ngit     = SCM::Git.new\npaths   = git.paths(:unique => true, :fallback => :current_file)\n\ndisplay = paths.map { |e| File.basename(e) }.join(\"”, “\")\nplural  = (paths.size == 1) ? '' : 's'\nfiles   = (paths.size == 1) ? \"“#{display}”\" : 'files'\n\nif 'Revert' == TextMate::UI.alert(:warning, \"Revert #{files}?\", \"Do you really want to revert the file#{plural} “#{display}” and lose all local changes?\", 'Revert', 'Cancel')\n\n  puts git.revert(paths)\n\nend\n",
  "input": "none",
  "inputFormat": "text",
  "name": "Revert…",
  "outputCaret": "afterOutput",
  "outputFormat": "text",
  "outputLocation": "toolTip",
  "requiredCommands": [
    {
      "command": "git",
      "locations": [
        "/usr/local/git/bin/git",
        "/opt/local/bin/git",
        "/usr/local/bin/git"
      ],
      "variable": "TM_GIT"
    }
  ],
  "scope": "attr.scm.git",
  "semanticClass": "action.scm.revert",
  "version": 2
}
