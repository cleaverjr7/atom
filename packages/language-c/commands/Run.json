{
  "autoScrollOutput": true,
  "beforeRunningCommand": "saveModifiedFiles",
  "command": "#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby\n\nrequire \"#{ENV['TM_SUPPORT_PATH']}/lib/tm/executor\"\nrequire \"#{ENV['TM_SUPPORT_PATH']}/lib/tm/save_current_document\"\nrequire \"shellwords\"\n\nCONFIG = {\n  'source.c'      => [ ENV['TM_GCC'] || 'xcrun clang',   \"-x c             #{ENV['TM_C_FLAGS']      || '-Wall -include stdio.h'}\",                                    'c'  ],\n  'source.c++'    => [ ENV['TM_GXX'] || 'xcrun clang++', \"-x c++           #{ENV['TM_CXX_FLAGS']    || '-Wall -include stdio.h -include iostream'}\",                  'cc' ],\n  'source.objc'   => [ ENV['TM_GCC'] || 'xcrun clang',   \"-x objective-c   #{ENV['TM_OBJC_FLAGS']   || '-Wall -include stdio.h -framework Cocoa'}\",                   'm'  ],\n  'source.objc++' => [ ENV['TM_GXX'] || 'xcrun clang++', \"-x objective-c++ #{ENV['TM_OBJCXX_FLAGS'] || '-Wall -include stdio.h -include iostream -framework Cocoa'}\", 'mm' ],\n}\n\ncc, flags, ext = *CONFIG['source.objc++'] # default\ncc, flags, ext = *CONFIG[$&] if ENV[\"TM_SCOPE\"] =~ /\\bsource\\.(obj)?c(\\+\\+)?/\n\nTextMate.save_if_untitled(ext)\nTextMate::Executor.make_project_master_current_document\nargs = Shellwords.split(cc) << Shellwords.split(flags) << ENV[\"TM_FILEPATH\"]\nTextMate::Executor.run(args, :version_args => [\"--version\"], :version_regex => /\\A([^\\n]*) \\(GCC\\).*/m)\n",
  "input": "document",
  "inputFormat": "text",
  "keyEquivalent": "@r",
  "name": "Run",
  "outputCaret": "afterOutput",
  "outputFormat": "html",
  "outputLocation": "newWindow",
  "scope": "source.c, source.c++, source.objc, source.objc++",
  "semanticClass": "process.run.c",
  "version": 2
}
