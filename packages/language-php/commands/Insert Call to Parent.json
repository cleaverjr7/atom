{
  "beforeRunningCommand": "nop",
  "command": "#!/usr/bin/env php\n<?php\n\n$seekLine = intval(getenv('TM_LINE_NUMBER'));\n$tokens = token_get_all(file_get_contents('php://stdin'));\n$numTokens = count($tokens);\n\ndefine('TM_EXIT_INSERT_TEXT', 203);\n\n$startToken = false;\n\n// Find the first token that's on/after TM_LINE_NUMBER\nfor ($x = 0; $x < $numTokens; $x++) {\n    if (is_array($tokens[$x]) && $tokens[$x][2] >= $seekLine) {\n        $startToken = $x;\n        break;\n    }\n}\n\n// Could not find the line, so just start from the end\nif (false === $startToken) {\n    $startToken = $numTokens - 1;\n}\n\n$functionToken = false;\n$functionName = false;\n\n// Work backwards until we find the function declaration\nfor ($x = $startToken; $x >= 0; $x--) {\n    if (is_array($tokens[$x]) && T_FUNCTION === $tokens[$x][0]) {\n        // Try to find a function name, which may not exist if this is a closure\n        for ($y = $x + 1; $y < $numTokens; $y++) {\n            if (is_array($tokens[$y])) {\n                if (T_STRING === $tokens[$y][0]) {\n                    $functionToken = $y;\n                    $functionName = $tokens[$y][1];\n                    break 2;\n                }\n            } else if ($tokens[$y] === '(') {\n                break;\n            }\n        }\n    }\n}\n\n// No function declaration found, so let's act like we were never here\nif (false === $functionToken || false === $functionName) {\n    echo 'parent';\n\n    if ('YES' === getenv('TM_SOFT_TABS')) {\n        // Only use enough spaces to get to the next \"tab stop\"\n        $tabSize = getenv('TM_TAB_SIZE');\n        $col = intval(getenv('TM_COLUMN_NUMBER')) + 5;\n        echo str_repeat(' ', $tabSize - ($col % $tabSize));\n    } else {\n        echo \"\\t\";\n    }\n\n    exit(TM_EXIT_INSERT_TEXT);\n}\n\n$firstParenFound = false;\n$skipParens = 0;\n$numParams = 0;\n$params = array();\n\nfor ($x = $functionToken + 1; $x < $numTokens; $x++) {\n    $token = $tokens[$x];\n\n    if ($firstParenFound && is_array($token)) {\n        if (T_VARIABLE === $token[0]) {\n            $numParams++;\n            $params[] = \"\\${{$numParams}:\" . str_replace('$', '\\$', $token[1]) . '}';\n        }\n    } else {\n        switch ($token) {\n            case '(':\n                if ($firstParenFound) {\n                    $skipParens++;\n                } else {\n                    $firstParenFound = true;\n                }\n                break;\n            case ')':\n                if ($skipParens) {\n                    $skipParens--;\n                } else if ($firstParenFound) {\n                    break 2;\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n\necho \"parent::{$functionName}(\" . implode(', ', $params) . ');$0';",
  "input": "document",
  "name": "Insert Call to Parent",
  "output": "insertAsSnippet",
  "scope": "source.php",
  "tabTrigger": "parent"
}
