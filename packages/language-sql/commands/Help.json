{
  "beforeRunningCommand": "nop",
  "bundleUUID": "AAB4CBF7-73F9-11D9-B89A-000D93589AF6",
  "command": "#!/usr/bin/env bash\n\n. \"$TM_SUPPORT_PATH/lib/webpreview.sh\"\nhtml_header \"SQL Bundle Help\" \"SQL\"\n\n\"$TM_SUPPORT_PATH/lib/markdown_to_help.rb\" <<'MARKDOWN'\n<script type=\"text/javascript\" charset=\"utf-8\">\n\tfunction launchConfig() {\n\t    TextMate.system('\"$TM_BUNDLE_SUPPORT\"/bin/configure.sh 2>&1', null);\n\t    window.close();\n\t}\n</script>\nThe SQL bundle allows you to browse MySQL/PostgreSQL databases and execute queries.\n\n# Configuration\n\nBefore you can use the SQL bundle you must configure at least one SQL connection using the <a href=\"javascript:launchConfig()\">*Configure*</a> command.\nYou must provide at least a username and a hostname (note that if you wish to connect locally bypassing a socket, you must use `127.0.0.1` rather than `localhost`).\n\nYou can store multiple connections – use the ‘+’ button to add another connection. Whichever profile is selected when you close the dialog will be used when connecting.\n\nAlternatively you can set `TM_SQL_CONNECTION` to the title of a connection and it will take precedence. This is useful for setting connections on a per-project basis.\n\n# Execute Line / Selection as Query\n\nThe _Execute Line / Selection as Query_ command takes the selected text or current line and submits it as a query to either MySQL or PostgreSQL.\n\nYou will need to setup a database connection via the <a href=\"javascript:launchConfig()\">*Configure*</a> command. Pressing ⌃⇧Q on an empty line will open the database browser.\n\n# Database Browser\n\nThe database browser command displays a list of tables in whatever database you are currently working in using either PostgreSQL or MySQL. Click on the name of a database on the left to view the tables in that database.\n\nThe connection to your server is setup with the <a href=\"javascript:launchConfig()\">*Configure*</a> command.\n\nMARKDOWN\n\nhtml_footer\n",
  "input": "none",
  "name": "Help",
  "output": "showAsHTML",
  "scope": "source.sql"
}
