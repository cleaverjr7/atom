name: ci
on:
  push:
    branches:
    - master
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
jobs:
  linux-tests:
    name: Linux tests
    runs-on: ubuntu-18.04
    env:
      DISPLAY: ":99"
      ATOM_GITHUB_BABEL_ENV: coverage
      MOCHA_TIMEOUT: 60000
      UNTIL_TIMEOUT: 30000
    steps:
    - uses: actions/checkout@v1
    - name: install Atom
      shell: bash
      run: |
        curl -s -L https://atom.io/download/deb?channel=dev \
          -H 'Accept: application/octet-stream' \
          -o /tmp/atom-amd64.deb
        /sbin/start-stop-daemon --start --quiet \
          --pidfile /tmp/custom_xvfb_99.pid \
          --make-pidfile --background \
          --exec /usr/bin/Xvfb \
          -- :99 -ac -screen 0 1280x1024x16
        sudo apt-get update
        sudo apt-get install -yyq libgconf-2-4 build-essential git libsecret-1-dev gvfs-bin
        dpkg-deb -x /tmp/atom-amd64.deb /tmp/atom
    - name: install dependencies
      shell: bash
      run: /tmp/atom/usr/share/atom-dev/resources/app/apm/bin/apm ci
    - name: run tests
      shell: bash
      run: /tmp/atom/usr/bin/atom-dev --test test/
    - name: report code coverage
      shell: bash
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        SYSTEM_PULLREQUEST_PULLREQUESTNUMBER: ${{ github.event.number }}
        SYSTEM_PULLREQUEST_SOURCEBRANCH: ${{ github.head_ref }}
        BUILD_SOURCEBRANCH: ${{ github.event.ref }}
      run: |
        npm run report:coverage
        bash <(curl -s https://codecov.io/bash) \
          -n "Linux" \
          -P "${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER:-}" \
          -B "${SYSTEM_PULLREQUEST_SOURCEBRANCH:-${BUILD_SOURCEBRANCH}}"
      if: success() || failure()

  macos-tests:
    name: MacOS tests
    runs-on: macos-10.14
    env:
      ATOM_GITHUB_BABEL_ENV: coverage
      MOCHA_TIMEOUT: 60000
      UNTIL_TIMEOUT: 30000
    steps:
    - uses: actions/checkout@v1
    - name: install Atom
      shell: bash
      run: |
        curl -s -L https://atom.io/download/mac?channel=dev \
          -H 'Accept: application/octet-stream' \
          -o /tmp/atom.zip
        sudo unzip -q /tmp/atom.zip -d /tmp/atom
    - name: install dependencies
      shell: bash
      run: |
        '/tmp/atom/Atom Dev.app/Contents/Resources/app/apm/bin/apm' ci
    - name: run tests
      shell: bash
      run: |
        '/tmp/atom/Atom Dev.app/Contents/Resources/app/atom.sh' --test test/
    - name: report code coverage
      shell: bash
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        SYSTEM_PULLREQUEST_PULLREQUESTNUMBER: ${{ github.event.number }}
        SYSTEM_PULLREQUEST_SOURCEBRANCH: ${{ github.head_ref }}
        BUILD_SOURCEBRANCH: ${{ github.event.ref }}
      run: |
        npm run report:coverage
        bash <(curl -s https://codecov.io/bash) \
          -n "macOS" \
          -P "${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER:-}" \
          -B "${SYSTEM_PULLREQUEST_SOURCEBRANCH:-${BUILD_SOURCEBRANCH}}"
      if: success() || failure()

  windows-tests:
    name: Windows tests
    runs-on: windows-2019
    env:
      ATOM_GITHUB_BABEL_ENV: coverage
      MOCHA_TIMEOUT: 60000
      UNTIL_TIMEOUT: 30000
    steps:
    - uses: actions/checkout@v1
    - name: install Atom
      shell: powershell
      run: |
        Set-StrictMode -Version Latest
        $script:ATOMROOT = "$env:GITHUB_WORKSPACE/atom"
        Write-Host "::set-env name=ATOMROOT,::$script:ATOMROOT"
        Write-Host "::add-path::$script:ATOMROOT\Atom Dev\resources\cli\"

        Write-Host "Downloading latest Atom release"
        $source = "https://atom.io/download/windows_zip?channel=dev"
        $destination = "atom.zip"

        (New-Object System.Net.WebClient).DownloadFile($source, $destination)
        Expand-Archive -Path "atom.zip" -DestinationPath $script:ATOMROOT
    - name: install dependencies
      shell: powershell
      run: apm ci
    - name: run tests
      shell: powershell
      run: |
        # Normalize %TEMP% as a long (non 8.3) path.
        $env:TEMP = (Get-Item -LiteralPath $env:TEMP).FullName
        $env:ELECTRON_NO_ATTACH_CONSOLE = "true"

        Write-Host "Running tests"
        & atom --test test 2>&1 | %{ "$_" }
    - name: report code coverage
      shell: bash
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        SYSTEM_PULLREQUEST_PULLREQUESTNUMBER: ${{ github.event.number }}
        SYSTEM_PULLREQUEST_SOURCEBRANCH: ${{ github.head_ref }}
        BUILD_SOURCEBRANCH: ${{ github.event.ref }}
      run: |
        npm run report:coverage
        bash <(curl -s https://codecov.io/bash) \
          -n "macOS" \
          -P "${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER:-}" \
          -B "${SYSTEM_PULLREQUEST_SOURCEBRANCH:-${BUILD_SOURCEBRANCH}}"
      if: success() || failure()

  lint:
    name: Lint
    runs-on: ubuntu-18.04
    env:
      DISPLAY: ":99"
    steps:
    - uses: actions/checkout@v1
    - name: install Atom
      shell: bash
      run: |
        curl -s -L https://atom.io/download/deb?channel=dev \
          -H 'Accept: application/octet-stream' \
          -o /tmp/atom-amd64.deb
        /sbin/start-stop-daemon --start --quiet \
          --pidfile /tmp/custom_xvfb_99.pid \
          --make-pidfile --background \
          --exec /usr/bin/Xvfb \
          -- :99 -ac -screen 0 1280x1024x16
        sudo apt-get update
        sudo apt-get install -yyq libgconf-2-4 build-essential git libsecret-1-dev gvfs-bin
        dpkg-deb -x /tmp/atom-amd64.deb /tmp/atom
    - name: install dependencies
      shell: bash
      run: /tmp/atom/usr/share/atom-dev/resources/app/apm/bin/apm ci
    - name: lint
      shell: bash
      run: npm run lint

  snapshot-tests:
    name: Snapshot tests
    runs-on: ubuntu-18.04
    env:
      DISPLAY: ":99"
      ATOM_GITHUB_BABEL_ENV: coverage
      ATOM_GITHUB_TEST_SUITE: snapshot
    steps:
    - uses: actions/checkout@v1
    - name: install Atom
      shell: bash
      run: |
        curl -s -L https://atom.io/download/deb?channel=dev \
          -H 'Accept: application/octet-stream' \
          -o /tmp/atom-amd64.deb
        /sbin/start-stop-daemon --start --quiet \
          --pidfile /tmp/custom_xvfb_99.pid \
          --make-pidfile --background \
          --exec /usr/bin/Xvfb \
          -- :99 -ac -screen 0 1280x1024x16
        sudo apt-get update
        sudo apt-get install -yyq libgconf-2-4 build-essential git libsecret-1-dev gvfs-bin
        dpkg-deb -x /tmp/atom-amd64.deb /tmp/atom
    - name: install dependencies
      shell: bash
      run: /tmp/atom/usr/share/atom-dev/resources/app/apm/bin/apm ci
    - name: run snapshot tests
      shell: bash
      run: /tmp/atom/usr/bin/atom-dev --test test/
