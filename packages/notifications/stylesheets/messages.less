@import "ui-variables";
@import "octicon-mixins";
@import "tabs";

@icon-size: 30px;
@max-width: 300px;
@top-margin: @tab-height + @tab-top-padding + @tab-bottom-border-height;
@bottom-margin: @top-margin;

atom-messages {
  display: block;
  z-index: 2;
  position: absolute;
  top: @top-margin;
  right: 0;
  max-width: @max-width;
  max-height: calc(100% ~"-" @top-margin); // ~"-" disable LESS calculation
  padding: @component-padding @component-padding @component-padding @component-padding*3; // more space on the left for the animations
  font-size: 1.2em;
  overflow-x: hidden;
  overflow-y: auto;

  // -webkit-user-modify: read-write; // editable text during dev
}

atom-message {
  display: block;
  position: relative;
  margin-bottom: 2px;
  border-radius: @component-border-radius;
  word-wrap: break-word;

  &.icon:before {
    position: absolute;
    top: 12px;
    left: -@icon-size;
    bottom: 0;
    width: @icon-size;
    text-align: center;
  }

  // .item's are used as general containers
  .item {
    padding: @component-padding;
    border-top: 1px solid hsla(0,0%,0%,.1);
  }

  .message.item {
    border-top: none;
  }

  &.has-close .message {
    padding-right: @component-padding + 24px; // space for icon
  }

  // TODO: might be better to create unique close buttons?
  .close {
    position: absolute;
    top: @component-padding;
    right: @component-padding;
    font-size: 16px;
    text-shadow: none;
    color: inherit;
    opacity: .3;
    &:hover, &:focus {
      opacity: 1;
      color: inherit;
    }
    &:active {
      opacity: .2;
    }
    &:before {
      margin: 0;
      color: inherit;
    }
  }

  .detail {
    font-size: .8em;
    background-color: hsla(0,0%,100%,.3);
    background-clip: padding-box;
  }

  .fatal-message {
    font-size: .8em;
  }

  .btn-toolbar {
    margin-top:  @component-padding/2;
  }

}

// Types -------------------------------

atom-message[type="fatal"],
atom-message[type="error"] {
  .message(@text-color-error; @background-color-error);
}

atom-message[type="warning"] {
  .message(@text-color-warning; @background-color-warning);
}

atom-message[type="info"] {
  .message(@text-color-info; @background-color-info);
}

atom-message[type="success"] {
  .message(@text-color-success; @background-color-success);
}


// Mixins -------------------------------

.message(@txt; @bg) {
  color: darken(@txt, 40%);
  border-left: @icon-size solid @bg;
  background-color: lighten(@bg, 25%);

  &.icon:before {
    color: lighten(@bg, 36%);
  }
}


// Animations -------------------------------

atom-message {
  -webkit-animation: message-show .16s cubic-bezier(0.175, 0.885, 0.32, 1.27499);

  &[type="fatal"] {
    -webkit-animation: message-show .16s cubic-bezier(0.175, 0.885, 0.32, 1.27499),
    message-shake 4s 2s;
    -webkit-animation-iteration-count: 1, 3; // shake 3 times after showing
  }

  &.remove {
    -webkit-animation: message-hide .24s .1s cubic-bezier(0.6, -0.28001, 0.735, 0.045);
    -webkit-animation-fill-mode: forwards;
  }
}

@-webkit-keyframes message-show {
    0% { opacity: 0; transform: perspective(@max-width) translateY(-20px) rotateX(90deg); }
  100% { opacity: 1; transform: perspective(@max-width) translateY(    0) rotateX( 0deg); }
}

@-webkit-keyframes message-hide {
    0% { opacity: 1; transform: translateX(   0); }
  100% { opacity: 0; transform: translateX(100%); }
}

@-webkit-keyframes message-shake {
    0% { transform: translateX(   0); }
    2% { transform: translateX(-4px); }
    4% { transform: translateX( 8px); }
    6% { transform: translateX(-4px); }
    8% { transform: translateX(   0); }
  100% { transform: translateX(   0); }
}
