@import "ui-variables";
@import "octicon-mixins";
@import "tabs";

@autohide: 5s;
@icon-size: 30px;
@width: 260px;
@width-detail: 400px;
@max-height: 200px;
@notification-gap: 2px;
@top-margin: @tab-height + @tab-top-padding + @tab-bottom-border-height;
@bottom-margin: @top-margin;

atom-notifications {
  display: block;
  z-index: 2;
  position: absolute;
  top: @top-margin;
  right: 0;
  max-height: calc(100% ~"-" @top-margin); // ~"-" disable LESS calculation
  padding: @component-padding;
  font-size: 1.2em;
  overflow-x: hidden;
  overflow-y: auto;
  &::-webkit-scrollbar {
    display: none;
  }

  // -webkit-user-modify: read-write; // editable text during dev
}

atom-notification {
  float: right;
  clear: right;
  position: relative;
  width: @width;
  padding-left: @icon-size;
  max-height: @max-height;
  margin-bottom: @notification-gap;
  border-radius: @component-border-radius;
  word-wrap: break-word;

  &.icon:before {
    position: absolute;
    top: 0;
    left: 0;
    width: @icon-size;
    height: 100%;
    padding-top: @component-padding;
    text-align: center;
    border-radius: @component-border-radius 0 0 @component-border-radius;
  }

  .content {
    max-height: inherit;
    overflow-y: auto;
    &::-webkit-scrollbar {
      display: none;
    }
  }

  // .item's are used as general containers
  .item {
    padding: @component-padding;
    border-top: 1px solid hsla(0,0%,0%,.1);
    &.message {
      border-top: none;
    }
  }

  &.has-close .message {
    padding-right: @component-padding + 24px; // space for icon
  }

  // TODO: might be better to create unique close buttons?
  .close {
    position: absolute;
    top: @component-padding;
    right: @component-padding;
    font-size: 16px;
    text-shadow: none;
    color: inherit;
    opacity: .3;
    &:hover, &:focus {
      opacity: 1;
      color: inherit;
    }
    &:active {
      opacity: .2;
    }
    &:before {
      margin: 0;
      color: inherit;
    }
  }

  &.has-detail {
    width: @width-detail;
  }

  .detail {
    font-size: .8em;
    background-color: hsla(0,0%,100%,.3);
    background-clip: padding-box;
    white-space: pre;
    font-family: @font-family-monospace;
  }

  .fatal-notification {
    font-size: .8em;
  }

  .btn-toolbar {
    margin-top:  @component-padding;
  }
}

// Types -------------------------------

atom-notification.fatal {
  .notification(@text-color-error; @background-color-error);
}

atom-notification.error {
  .notification(@text-color-error; @background-color-error);
}

atom-notification.warning {
  .notification(@text-color-warning; @background-color-warning);
}

atom-notification.info {
  .notification(@text-color-info; @background-color-info);
}

atom-notification.success {
  .notification(@text-color-success; @background-color-success);
}


// Mixins -------------------------------

.notification(@txt; @bg) {
  color: darken(@txt, 40%);
  background-color: lighten(@bg, 25%);

  a {
    color: darken(@txt, 20%);
  }

  &.icon:before {
    color: lighten(@bg, 36%);
    background-color: @bg;
  }
}


// Animations -------------------------------

atom-notification {
  -webkit-animation: notification-show .16s cubic-bezier(0.175, 0.885, 0.32, 1.27499);
  -webkit-animation-fill-mode: backwards, both, forwards;

  &[type="fatal"] {
    -webkit-animation: notification-show .16s cubic-bezier(0.175, 0.885, 0.32, 1.27499),
                       notification-shake 4s 2s;
    -webkit-animation-iteration-count: 1, 3; // shake 3 times after showing
    &:hover {
      -webkit-animation-play-state: paused; // stop shaking when hovering
    }
  }

  &.remove,
  &.remove:hover {
    // Total time: 700ms
    -webkit-animation: notification-hide   .24s .16s cubic-bezier(0.6, 0.04, 0.98, 0.335),
                       notification-shrink .30s .40s cubic-bezier(0.5, 0, 0, 1);
    -webkit-animation-fill-mode: forwards;
  }
}

@-webkit-keyframes notification-show {
    0% { opacity: 0; transform: perspective(@width) translate(0, -20px) rotateX(90deg); }
  100% { opacity: 1; transform: perspective(@width) translate(0,     0) rotateX( 0deg); }
}

@-webkit-keyframes notification-hide {
    0% { opacity: 1; transform: scale( 1); }
  100% { opacity: 0; transform: scale(.8); }
}

@-webkit-keyframes notification-shrink {
    0% {  opacity: 0; max-height: @max-height; margin-bottom: @notification-gap; transform: scale(.8); }
  100% {  opacity: 0; max-height: 0;           margin-bottom: 0;            transform: scale(.8); }
}

@-webkit-keyframes notification-shake {
    0% { transform: translateX(   0); }
    2% { transform: translateX(-4px); }
    4% { transform: translateX( 8px); }
    6% { transform: translateX(-4px); }
    8% { transform: translateX(   0); }
  100% { transform: translateX(   0); }
}
