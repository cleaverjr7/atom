{
  "content": "class ${1:Model}sController < ApplicationController\n  before_filter :find_${1/./\\l$0/}, :only => [:show, :edit, :update, :destroy]\n\n  # GET /${1/./\\l$0/}s\n  # GET /${1/./\\l$0/}s.xml\n  def index\n    @${1/./\\l$0/}s = ${1:Model}.all\n\n    respond_to do |wants|\n      wants.html # index.html.erb\n      wants.xml  { render :xml => @${1/./\\l$0/}s }\n    end\n  end\n\n  # GET /${1/./\\l$0/}s/1\n  # GET /${1/./\\l$0/}s/1.xml\n  def show\n    respond_to do |wants|\n      wants.html # show.html.erb\n      wants.xml  { render :xml => @${1/./\\l$0/} }\n    end\n  end\n\n  # GET /${1/./\\l$0/}s/new\n  # GET /${1/./\\l$0/}s/new.xml\n  def new\n    @${1/./\\l$0/} = ${1:Model}.new\n\n    respond_to do |wants|\n      wants.html # new.html.erb\n      wants.xml  { render :xml => @${1/./\\l$0/} }\n    end\n  end\n\n  # GET /${1/./\\l$0/}s/1/edit\n  def edit\n  end\n\n  # POST /${1/./\\l$0/}s\n  # POST /${1/./\\l$0/}s.xml\n  def create\n    @${1/./\\l$0/} = ${1:Model}.new(params[:${1/./\\l$0/}])\n\n    respond_to do |wants|\n      if @${1/./\\l$0/}.save\n        flash[:notice] = '${1:Model} was successfully created.'\n        wants.html { redirect_to(@${1/./\\l$0/}) }\n        wants.xml  { render :xml => @${1/./\\l$0/}, :status => :created, :location => @${1/./\\l$0/} }\n      else\n        wants.html { render :action => \"new\" }\n        wants.xml  { render :xml => @${1/./\\l$0/}.errors, :status => :unprocessable_entity }\n      end\n    end\n  end\n\n  # PUT /${1/./\\l$0/}s/1\n  # PUT /${1/./\\l$0/}s/1.xml\n  def update\n    respond_to do |wants|\n      if @${1/./\\l$0/}.update_attributes(params[:${1/./\\l$0/}])\n        flash[:notice] = '${1:Model} was successfully updated.'\n        wants.html { redirect_to(@${1/./\\l$0/}) }\n        wants.xml  { head :ok }\n      else\n        wants.html { render :action => \"edit\" }\n        wants.xml  { render :xml => @${1/./\\l$0/}.errors, :status => :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /${1/./\\l$0/}s/1\n  # DELETE /${1/./\\l$0/}s/1.xml\n  def destroy\n    @${1/./\\l$0/}.destroy\n\n    respond_to do |wants|\n      wants.html { redirect_to(${1/./\\l$0/}s_url) }\n      wants.xml  { head :ok }\n    end\n  end\n\n  private\n    def find_${1/./\\l$0/}\n      @${1/./\\l$0/} = ${1:Model}.find(params[:id])\n    end\n\nend\n",
  "name": "Create resources controller class",
  "scope": "source.ruby",
  "tabTrigger": "resources"
}
