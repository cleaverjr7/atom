id: 'typescript'
name: 'TypeScript'
type: 'tree-sitter'
parser: 'tree-sitter-typescript'
legacyScopeName: 'source.ts'

fileTypes: ['ts', 'tsx']

comments:
  start: '// '

folds: [
  {
    type: 'comment'
  }
  {
    type: ['jsx_element', 'template_string']
    start: {index: 0}
    end: {index: -1}
  }
  {
    type: 'jsx_self_closing_element'
    start: {index: 1}
    end: {index: -2}
  }
  {
    type: [
      'object_type'
      'template_arguments'
      'template_parameters'
    ]
    start: {index: 0}
    end: {index: -1}
  }
  {
    start: {index: 0, type: '{'}
    end: {index: -1, type: '}'}
  }
  {
    start: {index: 0, type: '['}
    end: {index: -1, type: ']'}
  }
  {
    start: {index: 0, type: '('}
    end: {index: -1, type: ')'}
  }
]

scopes:
  'program': 'source.ts'

  'property_identifier': 'variable.other.object.property'

  'function > identifier': 'entity.name.function'

  'call_expression > identifier': [
    {match: '^require$', scopes: 'support.function'},
    {match: '^[A-Z]', scopes: 'meta.class'},
    'entity.name.function'
  ]

  'method_definition > property_identifier': 'entity.name.function'
  'call_expression > member_expression > property_identifier': 'entity.name.function'

  'number': 'constant.numeric'
  'string': 'string.quoted'
  'regex': 'string.regexp'
  'escape_sequence': 'constant.character.escape'
  'template_string': 'string.quoted.template'
  'undefined': 'constant.language'
  'null': 'constant.language.null'
  'true': 'constant.language.boolean.true'
  'false': 'constant.language.boolean.false'
  'comment': 'comment.block'
  'hash_bang_line': 'comment.block'

  'template_substitution > "${"': 'punctuation.section.embedded'
  'template_substitution > "}"': 'punctuation.section.embedded'
  'template_substitution': 'embedded.source'

  '"("': 'punctuation.definition.parameters.begin.bracket.round'
  '")"': 'punctuation.definition.parameters.end.bracket.round'
  '"{"': 'punctuation.definition.function.body.begin.bracket.curly'
  '"}"': 'punctuation.definition.function.body.end.bracket.curly'

  'identifier': [
    {
      match: '^(global|module|exports|__filename|__dirname)$',
      scopes: 'support.variable'
    },
    {
      exact: 'require', scopes: 'support.function'
    }
    {
      match: '^[\$A-Z\\d_]+$',
      scopes: 'constant.other'
    },
    {
      match: '^[A-Z]',
      scopes: 'meta.class'
    },
  ]

  'shorthand_property_identifier': [
    {
      match: '^[\$A-Z_]+$',
      scopes: 'constant.other'
    },
    {
      match: '^[A-Z]',
      scopes: 'meta.class'
    },
  ]

  '"var"': 'storage.type'
  '"let"': 'storage.type'
  '"class"': 'storage.type'
  '"extends"': 'storage.modifier'
  '"const"': 'storage.modifier'
  '"static"': 'storage.modifier'
  '"function"': 'storage.type.function'
  '"=>"': 'storage.type.function'

  '"="': 'keyword.operator.js'
  '"+"': 'keyword.operator.js'
  '"-"': 'keyword.operator.js'
  '"*"': 'keyword.operator.js'
  '"/"': 'keyword.operator.js'
  '"%"': 'keyword.operator.js'
  '"=="': 'keyword.operator.js'
  '"==="': 'keyword.operator.js'
  '"!="': 'keyword.operator.js'
  '"!=="': 'keyword.operator.js'
  '">="': 'keyword.operator.js'
  '"<="': 'keyword.operator.js'

  # '">"': 'keyword.operator.js'
  # '"<"': 'keyword.operator.js'
  # '":"': 'keyword.operator.js'
  # '"?"': 'keyword.operator.js'

  '"&&"': 'keyword.operator.js'
  '"||"': 'keyword.operator.js'
  '"&"': 'keyword.operator.js'
  '"|"': 'keyword.operator.js'
  '"++"': 'keyword.operator.js'
  '"--"': 'keyword.operator.js'
  '"..."': 'keyword.operator.js'

  '"in"': 'keyword.operator.in'
  '"instanceof"': 'keyword.operator.instanceof'
  '"of"': 'keyword.operator.of'
  '"new"': 'keyword.operator.new'
  '"typeof"': 'keyword.operator.typeof'

  '"get"': 'keyword.operator.setter'
  '"set"': 'keyword.operator.setter'

  '"."': 'meta.delimiter'
  '","': 'meta.delimiter'

  '"if"': 'keyword.control'
  '"do"': 'keyword.control'
  '"else"': 'keyword.control'
  '"while"': 'keyword.control'
  '"for"': 'keyword.control'
  '"return"': 'keyword.control'
  '"break"': 'keyword.control'
  '"continue"': 'keyword.control'
  '"throw"': 'keyword.control'
  '"try"': 'keyword.control'
  '"catch"': 'keyword.control'
  '"finally"': 'keyword.control'
  '"switch"': 'keyword.control'
  '"case"': 'keyword.control'
  '"default"': 'keyword.control'
  '"export"': 'keyword.control'
  '"import"': 'keyword.control'
  '"from"': 'keyword.control'
  '"yield"': 'keyword.control'
  '"async"': 'keyword.control'
  '"await"': 'keyword.control'
  '"debugger"': 'keyword.control'
  '"delete"': 'keyword.control'

  'jsx_attribute > property_identifier': 'entity.other.attribute-name'
  'jsx_opening_element > identifier': 'entity.name.tag'
  'jsx_closing_element > identifier': 'entity.name.tag'
  'jsx_self_closing_element > identifier': 'entity.name.tag'

  'class > identifier': 'support.storage.type'
  'type_identifier': 'support.storage.type'
  'predefined_type': 'support.storage.type'

  '"as"': 'keyword.control'
  '"implements"': 'storage.modifier'
  '"namespace"': 'storage.modifier'
  '"enum"': 'storage.type'
  '"interface"': 'storage.type'
  '"declare"': 'storage.modifier'
  '"public"': 'storage.modifier'
  '"private"': 'storage.modifier'
  'readonly': 'storage.modifier'
  '"type"': 'storage.type.type'
