{
  "beforeRunningCommand": "saveActiveFile",
  "command": "#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby  -wKU\n# \n# Open Document in Running Browser(s)\n# \n# Now supports multiple running versions of a single browser along\n# with a range of new/old browsers. Bring back support for Firefox.\n# \n# Options: Set TM_PROJECT_SITEURL in your TM Project Window Info Button\n# in the following form: \"http://example.com/\"\n\nrequire \"#{ENV['TM_SUPPORT_PATH']}/lib/escape.rb\"\n\nif ENV['TM_PROJECT_SITEURL']\n  url = \"#{ENV['TM_PROJECT_SITEURL']}\" + ENV['TM_FILEPATH'].sub(/^#{Regexp.escape(ENV['TM_PROJECT_DIRECTORY'])}\\//, '') \nelse\n  url = \"file://#{ENV['TM_FILEPATH']}\"\nend\n\nproclist = `ps -x -o command`\nactive = []\nos = `defaults read /System/Library/CoreServices/SystemVersion ProductVersion`\n\nbrowsers = %w[ Safari OmniWeb Camino Shiira firefox(-bin)? Xyle\\ scope Opera Internet\\ Explorer flock-bin iCab Sunrise seamonkey-bin navigator-bin Google\\ Chrome].join('|')\n\n# Build paths to each active browser\n#\n# Notes:\n#   - 'WebKit' look ahead is to rule it out so we can use the working\n#      rule below.\n#   - 'LaunchCFMApp' portion is so iCab works.\nactive = proclist.scan(%r{^(?:/.*LaunchCFMApp )?(/.*\\.app)(?=/Contents/MacOS/(?:#{browsers})\\b(?!.*WebKit))})\n\n# Special check for WebKit as it appears as Safari\n# Note: Only supports one running instance of WebKit, picked at random.\nif proclist =~ %r{/Contents/MacOS/Safari.*WebKit}\n  active << \"WebKit\"\nend\n\n# TODO: Change when Leopard Only\n# On Leopard use the -g option to open in background.\nif os =~ /^10\\.(5|6|7)/\n  active.each {|p| `open -g -a #{e_sh(p)} #{e_sh(url)}` }\nelse\n  active.each {|p| `open -a #{e_sh(p)} #{e_sh(url)}` }\nend",
  "input": "none",
  "name": "Open Document in Running Browser(s)",
  "output": "discard",
  "scope": "text.html"
}
