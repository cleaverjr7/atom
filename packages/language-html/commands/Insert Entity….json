{
  "beforeRunningCommand": "nop",
  "command": "#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby -w\nrequire \"#{ENV['TM_SUPPORT_PATH']}/lib/osx/plist\"\nrequire \"#{ENV['TM_SUPPORT_PATH']}/lib/escape\"\n\nentities = [ ]\nFile.read(\"#{ENV['TM_BUNDLE_SUPPORT']}/entities.txt\").scan(/^(\\d+)\\t(.+)$/) do |key, value|\n  char = [key.to_i].pack('U')\n  entities << { 'display' => \"#{value} (#{char})\", 'char' => char, 'entity' => value }\nend\n\nentities.sort! { |lhs, rhs| lhs['display'].downcase <=> rhs['display'].downcase }\n\nplist = { 'entities' => entities, 'insertAsEntity' => true }.to_plist\nopen('|\"$DIALOG\" -cm \"Insert Entity\"', 'w+') do |io|\n  io << plist; io.close_write\n\n  res = OSX::PropertyList.load(io.read)['result']\n  exit if res.nil?\n\n  if res['asEntity']\n    print '&' + res['returnArgument'].first['entity'] + ';'\n  else\n    print res['returnArgument'].first['char']\n  end\nend\n",
  "input": "none",
  "inputFormat": "text",
  "keyEquivalent": "@&",
  "name": "Insert Entityâ€¦",
  "outputCaret": "afterOutput",
  "outputFormat": "text",
  "outputLocation": "atCaret",
  "scope": "text.html",
  "version": 2
}
